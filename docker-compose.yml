name: nosql

services:

  jupyter:
    build:
      context: "." 
      dockerfile: Dockerfile
    container_name: jupyter
    networks:
      - nosql-net
    expose:
      - 8888
    ports:
      - "8888:8888"
    volumes:
      - jupyter:/workdir

  redis:
    image: redis:7.0
    container_name: redis
    restart: unless-stopped
    networks:
      - nosql-net
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379"
    networks:
      - nosql-net
    ports:
      - "8082:8081"
    depends_on:
      - redis

  mongodb:
    image: mongo:8.0-noble
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:-root}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-root}"
    networks:
      - nosql-net
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express
    restart: unless-stopped
    networks:
      - nosql-net
    expose:
      - 8081
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${ME_CONFIG_MONGODB_ADMINUSERNAME:-root}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${ME_CONFIG_MONGODB_ADMINPASSWORD:-root}"
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb

  postgres:
    image: postgres:17-bookworm
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-postgres}"
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
    networks:
      - nosql-net
    expose:
      - 5433
    ports:
      - "5433:5432"
    volumes:
      - ./scripts/pagila-schema.sql:/docker-entrypoint-initdb.d/1-pagila-schema.sql
      - ./scripts/pagila-schema-jsonb.sql:/docker-entrypoint-initdb.d/1-pagila-schema-jsonb.sql
      - ./scripts/pagila-data.sql:/docker-entrypoint-initdb.d/2-pagila-data.sql
      - ./scripts/restore-pagila-data-jsonb.sh:/docker-entrypoint-initdb.d/3-restore-pagila-data-jsonb.sh
      - ./scripts/pagila-data-yum-jsonb.backup:/docker-entrypoint-initdb.d/pagila-data-yum-jsonb.backup
      - ./scripts/pagila-data-apt-jsonb.backup:/docker-entrypoint-initdb.d/pagila-data-apt-jsonb.backup
      - ./scripts/puc-schema.sh:/docker-entrypoint-initdb.d/9-puc-schema.sh
      - pgdata:/var/lib/postgresql/data

  pgadmin4:
      image: elestio/pgadmin:REL-9_4
      container_name: pgadmin
      restart: always
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        PGADMIN_LISTEN_PORT: 8080
      networks:
        - nosql-net
      expose:
        - 8080
      ports:
        - ":8080:8080"
      volumes:
        - pgadmin4:/pgadmin4/servers.json
      depends_on:
        - postgres

  dbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: dbeaver
    restart: unless-stopped
    networks:
      - nosql-net
    expose:
      - 8978
    ports:
      - "8978:8978"
    environment:
      CB_INIT_CONNECTION_NAME: "PostgreSQL"
      CB_INIT_CONNECTION_DRIVER: "postgresql"
      CB_INIT_CONNECTION_URL: "jdbc:postgresql://postgres:5432/${POSTGRES_DB:-mydatabase}"
      CB_INIT_CONNECTION_USER: "${POSTGRES_USER:-admin}"
      CB_INIT_CONNECTION_PASSWORD: "${POSTGRES_PASSWORD:-admin123}"
    depends_on:
      - postgres

networks:
  nosql-net:

volumes:
  app:
  pgdata:
  mongo_data:
  pgadmin4:
  redis_data:
  jupyter:

